server:
  port: 88

spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    template:
      routing-key: ${random.int(1000000)}
      default-receive-queue: "queue-auth-user"
      exchange: userExchange
      retry:
        max-attempts: 1
        enabled: true
        max-interval: 1000ms
        multiplier: 2
  application:
    name: auth-service
  profiles:
    active: local

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 2

management:
  endpoints:
    web:
      base-path: /actuator
      exposure.include: health, prometheus, gateway
      path-mapping.prometheus: metrics
  endpoint:
    health:
      show-details: always
    prometheus:
      cache.time-to-live: 1ms
    gateway:
      enabled: true


jwt:
  secretKey: 1231231231231231231231231231231231231231231231231231231231231231
  tokenPrefix: 'Bearer '
  tokenExpirationForVerification: 10
  tokenExpirationForLogin: 20

retryConfig:
  initialIntervalMs: 1000
  maxIntervalMs: 100
  multiplier: 1
  maxAttempts: 10
  sleepTimeMs: 100

config:
  cors:
    mapping: /**
    methods: GET, POST, DELETE, PUT
    allowedCredentials: true
    origins: http://localhost:3001
    allowedHeaders:
      Content-Type, content-type, x-requested-with,
      Access-Control-Allow-Origin,
      Access-Control-Allow-Credentials,
      Access-Control-Allow-Headers,
      x-auth-token, x-app-id, Origin, Accept,
      X-Requested-With, Access-Control-Request-Method,
      Access-Control-Request-Headers, Authorization,
      Set-Cookie, Cookie
    exposedHeaders:
      Authorization, set-cookie